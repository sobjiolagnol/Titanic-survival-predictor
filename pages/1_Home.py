# -*- coding: utf-8 -*-
import streamlit as st
from utils import load_csv, to_display, translate_text
import pandas as pd
import streamlit.components.v1 as components

st.markdown(
    "<h1 style='text-align: center; color: #0366d6;'>üö¢ Titanic Survival Predictor</h1>",
    unsafe_allow_html=True,
)

st.image(
    "https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Titanic_in_color.png/960px-Titanic_in_color.png",
    caption=(
        """RMS Titanic au d√©part de Southampton le 10 avril 1912  
        *Photo: Francis G. O. Stuart (1843‚Äì1923), coloris√©e (domaine public)*"""
        if st.session_state.lang.startswith("fr")
        else """RMS Titanic departing from Southampton on April 10, 1912  
        *Photo: Francis G. O. Stuart (1843‚Äì1923), colorized (public domain)*"""
    ),
)


st.header(":blue[Introduction]", divider=True)


# Textes √† lire

intro_FR = """
Le naufrage du Titanic est l‚Äôune des catastrophes maritimes les plus c√©l√®bres de l‚Äôhistoire. Le 15 avril 1912, lors de son voyage inaugural, le RMS Titanic, pourtant consid√©r√© comme insubmersible, a coul√© apr√®s une collision avec un iceberg. Malheureusement, il n‚Äôy avait pas assez de canots de sauvetage pour toutes les personnes √† bord, ce qui a entra√Æn√© la mort de 1502 des 2224 passagers et membres d‚Äô√©quipage.  

Bien que le hasard ait jou√© un r√¥le dans les chances de survie, certains groupes de personnes semblaient avoir plus de chances de survivre que d‚Äôautres. L'objectif de ce projet est de construire un mod√®le pr√©dictif pour r√©pondre √† la question ¬´ Quels types de personnes avaient le plus de chances de survivre ? ¬ª en s‚Äôappuyant sur certaines donn√©es de 891 passagers, telles que leur nom, √¢ge, sexe, famille, classe, etc...

Votre capitaine, vous souhaite la bienvenue √† bord du projet Titanic. Embarquez pour un voyage serein et passionnant √† travers le vaste oc√©an des donn√©es !
"""

intro_translated = translate_text(intro_FR, st.session_state.lang.split("-")[0])

text_DIDS = """DIDS ‚Äî Dive Into Data Science"""


script = f"""
<script>
    var msgINTRO = new SpeechSynthesisUtterance({intro_translated!r});
    msgINTRO.lang = {st.session_state.lang!r};
    msgINTRO.rate = 1.1;

    var msgDIDS = new SpeechSynthesisUtterance({text_DIDS!r});
    msgDIDS.lang = 'en-GB';
    msgDIDS.rate = 1.1;

    function speak() {{
        window.speechSynthesis.cancel();
        window.speechSynthesis.speak(msgINTRO);
        window.speechSynthesis.speak(msgDIDS);
    }}

    function stop() {{
        window.speechSynthesis.cancel();
    }}
</script>
"""

(col1, col2, *_) = st.columns(4, vertical_alignment="center")

with col1:
    components.html(
        script
        + f"""<button onclick="speak()">üéß {st.session_state.flag}<br>Audio Guide</button>""",
        height=45,
    )

with col2:
    components.html(
        script + """<button onclick="stop()">üîá<br>Stop</button>""",
        height=45,
    )


# if "skip_stream" not in st.session_state:
#    st.session_state.skip_stream = True
#    st.write_stream(stream_data(intro_translated))
#    st.write_stream(stream_data(text_DIDS))
# else:
st.write(intro_translated)
st.write(text_DIDS)

st.header(
    ":blue[Donn√©es]" if st.session_state.lang.startswith("fr") else ":blue[Data]",
    divider=True,
)

df = load_csv(drop_outliers=False)
df_display = to_display(df)

st.dataframe(df_display.style.format({"Tarif": "¬£{:.2f}"}))
st.caption(
    "Les valeurs 'None' grises indiquent des valeurs manquantes"
    if st.session_state.lang.startswith("fr")
    else "The gray 'None' values indicate missing data"
)

with st.expander(
    "Afficher les valeurs manquantes"
    if st.session_state.lang.startswith("fr")
    else "Display missing values"
):
    # Compter les valeurs manquantes et formater proprement
    missing = df_display.isna().sum().to_frame(name="Nombre")
    missing.index.name = "Valeurs manquantes"
    missing["%"] = missing["Nombre"] / len(df)
    missing["%"] = missing["%"].map(lambda x: f"{x:.1%}")
    # filtre et trie des valeurs manquantes
    missing = missing[missing["Nombre"] > 0]
    missing = missing.sort_values("Nombre", ascending=False)
    st.dataframe(missing, width=300, use_container_width=False)


st.markdown(
    ("Source des donn√©es" if st.session_state.lang.startswith("fr") else "Data source")
    + ' : <a href="https://github.com/datasciencedojo/datasets/blob/master/titanic.csv" target="_blank">Data Science Dojo</a>',
    unsafe_allow_html=True,
)


st.subheader(
    (
        ":blue[Pr√©cisions]"
        if st.session_state.lang.startswith("fr")
        else ":blue[Details]"
    ),
)
df = pd.DataFrame(
    {
        "Variable": [
            "Survie",
            "Sexe",
            "Classe",
            """Fratrie & √âpoux(se)""",
            """Parents & Enfants""",
            "Tarif",
            "Cabine",
            "Embarquement",
        ],
        "D√©finition": [
            "Est-ce que le passager a surv√©cu ?",
            "Sexe du passager",
            """Classe du billet *(indicateur du statut socio-√©conomique)*:  
            ‚Ä¢ 1√®re : classe ais√©e  
            ‚Ä¢ 2√®me : classe moyenne  
            ‚Ä¢ 3√®me : classe populaire""",
            """Nombre de fr√®res, s≈ìurs, √©poux(se) √† bord du Titanic""",
            """Nombre de parents et enfants √† bord du Titanic""",
            """Tarif de la cabine en livre sterling (¬£) pour l'ensemble de ses occupants""",
            "Num√©ro de la cabine",
            "Port d'embarquement (voir carte ci-dessous)",
        ],
    }
)

st.table(df.set_index("Variable"))

st.image("https://upload.wikimedia.org/wikipedia/commons/a/af/TitanicRoute.svg")


_, col, _ = st.columns(3)
with col:
    st.write("")
    st.write("")
    st.page_link(
        st.Page(
            "pages/2_Visualisation.py",
            title=(
                "Passer √† l'√©tape suivante"
                if st.session_state.lang.startswith("fr")
                else "Go to the next step"
            ),
            icon="‚û°Ô∏è",
        )
    )

st.divider()

st.markdown(
    """
    <div style='text-align: center; font-size: small; color: gray;'>
    ¬© 2025 Lagnol SOBJIO
    </div>
    """,
    unsafe_allow_html=True,
)
